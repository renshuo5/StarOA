<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee   http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <!-- 指定加载的配置文件的路径与名字，默认是/WEB-INF/applicationContext.xml -->
    
    <welcome-file-list>
        <welcome-file>
            login.jsp
        </welcome-file>
    </welcome-file-list>
    
    <context-param>
        <param-name>
            contextConfigLocation
        </param-name>
        <param-value>
            classpath*:/applicationContext*.xml
        </param-value>
    </context-param>
    <!-- Spring security Filter -->
    <filter>
        <filter-name>
            springSecurityFilterChain
        </filter-name>
        <filter-class>
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>
            springSecurityFilterChain
        </filter-name>
        <url-pattern>
            /*
        </url-pattern>
    </filter-mapping>
    
    <servlet>
        <servlet-name>
            index
        </servlet-name>
        <servlet-class>
            com.fjsdfx.starerp.web.servlet.Index
        </servlet-class>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>
            index
        </servlet-name>
        <url-pattern>
            /index
        </url-pattern>
    </servlet-mapping>
    
    
    <!-- 让Spring负责action对象的生成 -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    
    <listener>
        <listener-class>
            com.fjsdfx.starerp.web.loader.ServletContextLoaderListener
        </listener-class>
    </listener>
    
    <filter>
        <filter-name>
            encodingFilter
        </filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>
                encoding
            </param-name>
            <param-value>
                UTF-8
            </param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>
            encodingFilter
        </filter-name>
        <url-pattern>
            /*
        </url-pattern>
    </filter-mapping>
    <!--   openSessionInView-->
    <filter>
        <filter-name>
            openSessionInView
        </filter-name>
        <filter-class>
            org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
        </filter-class>
        <init-param>
            <param-name>
                sessionFactoryBeanName
            </param-name>
            <param-value>
                sessionFactory
            </param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>
            openSessionInView
        </filter-name>
        <url-pattern>
            /*
        </url-pattern>
    </filter-mapping>
    <!--   openSessionInView end-->
    <filter>
        <filter-name>
            pagerFilter
        </filter-name>
        <filter-class>
            com.fjsdfx.starerp.common.bean.PagerFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>
            pagerFilter
        </filter-name>
        <url-pattern>
            /*
        </url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>
            characterFilter
        </filter-name>
        <filter-class>
            com.fjsdfx.starerp.common.service.CharacterFilter
        </filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>
            characterFilter
        </filter-name>
        <url-pattern>
            /*
        </url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>
            struts2
        </filter-name>
        <filter-class>
            org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>
            struts2
        </filter-name>
        <url-pattern>
            /*
        </url-pattern>
    </filter-mapping>
    <!--  struts 相关配置 -->
    
    
    <!-- <welcome-file-list>-->
    <!--  <welcome-file>controlcenter/index.jsp</welcome-file>-->
    <!-- </welcome-file-list>-->
    
    
    <login-config>
        <auth-method>
            BASIC
        </auth-method>
    </login-config>
    <!-- struts 相关配置 -->
</web-app>
